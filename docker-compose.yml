version: "3"

services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data_sl3/
    environment:
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${NAME}
    expose:
      - "5432"
    ports:
      - "5432:5432"
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
#  kibana:
#    container_name: kibana
#    image: docker.elastic.co/kibana/kibana:7.13.3
#   # restart: always
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200    # address of elasticsearch docker container which kibana will connect
#    ports:
#      - 5601:5601
#    depends_on:
#      - elasticsearch                                   # kibana will start when elasticsearch has started

  app:
    build:
      context: .
    ports:
      - "5000:5000"
    restart: always
    environment:
      - DB_HOST=${HOST}
      - DB_NAME=${NAME}
      - DB_USER=${USER}
      - DB_PASS=${PASSWORD}
    depends_on:
      - db
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:5000"

#  pghero:
#    image: ankane/pghero
#    container_name: pghero
#    ports:
#      - 8080:8080
#    environment:
#      DATABASE_URL: postgres://${USER}:${PASSWORD}@host.docker.internal:${PORT}/${NAME}

volumes:
  postgres_data:
  elasticsearch-data:


